#!/bin/bash

if ! [ $# -eq 1 ]; then
    APP_NAME="$(basename $0)"
    echo "${APP_NAME}: usage is: ${APP_NAME} {DEB_ARCH}"
    echo -e "DEB_ARCH:\tDebian target platform"
    exit 1
fi

DEB_ARCH="${1}"
NETBOOT_ROOT="https://deb.debian.org/debian/dists/stable/main/installer-${DEB_ARCH}/current/images"
NETBOOT_KERNEL="netboot/debian-installer/${DEB_ARCH}"
NETBOOT_URL="$NETBOOT_ROOT/$NETBOOT_KERNEL"

[ -d fetch ] || mkdir fetch
cd fetch
curl -O "$NETBOOT_ROOT/MD5SUMS"

function get_md5_remote
{
    local REMOTE_FILE="$1"
    grep "$REMOTE_FILE" MD5SUMS|awk '{print $1}'
}

function get_md5_local
{
    local LOCAL_FILE="$1"
    md5sum "$LOCAL_FILE"|awk '{print $1}'
}

function check_md5
{
    local REMOTE_FILE="$1"
    local LOCAL_FILE="$2"
    [ "$(get_md5_remote $REMOTE_FILE)" = "$(get_md5_local $LOCAL_FILE)" ]
}

DEBIAN_INITRD_DATE=$(date -ud "$(curl -s -I ""${NETBOOT_URL}/initrd.gz""|sed -n 's/^last-modified: \(.*\)/\1/p')" +%y%m%d%H%M)
echo DEBIAN_INITRD_DATE="${DEBIAN_INITRD_DATE}"

if ! check_md5 "./${NETBOOT_KERNEL}/linux" "linux" ; then
    echo "$0: linux: fetching"
    curl -O "$NETBOOT_URL/linux"
else
    echo "$0: linux: updated"
fi

if ! check_md5 "./${NETBOOT_KERNEL}/initrd.gz" "initrd.gz" ; then
    echo "$0: initrd.gz: fetching"
    curl -O "$NETBOOT_URL/initrd.gz"
else
    echo "$0: initrd.gz: updated"
fi
